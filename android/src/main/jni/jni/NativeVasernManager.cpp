// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from vasern.djinni

#include "NativeVasernManager.hpp"  // my header
#include "Marshal.hpp"
#include "NativeJavascriptArray.hpp"
#include "NativeJavascriptMap.hpp"
#include "NativeJavascriptPromise.hpp"
#include "NativeReactBridge.hpp"

namespace djinni_generated {

NativeVasernManager::NativeVasernManager() : ::djinni::JniInterface<::vasern::VasernManager, NativeVasernManager>("com/vasern/VasernManager$CppProxy") {}

NativeVasernManager::~NativeVasernManager() = default;


CJNIEXPORT void JNICALL Java_com_vasern_VasernManager_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::vasern::VasernManager>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_vasern_VasernManager_create(JNIEnv* jniEnv, jobject /*this*/, ::djinni_generated::NativeReactBridge::JniType j_bridge)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::vasern::VasernManager::create(::djinni_generated::NativeReactBridge::toCpp(jniEnv, j_bridge));
        return ::djinni::release(::djinni_generated::NativeVasernManager::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_com_vasern_VasernManager_00024CppProxy_native_1Startup(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_path, ::djinni_generated::NativeJavascriptMap::JniType j_schema, ::djinni_generated::NativeJavascriptPromise::JniType j_promise)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::vasern::VasernManager>(nativeRef);
        ref->Startup(::djinni::String::toCpp(jniEnv, j_path),
                     ::djinni_generated::NativeJavascriptMap::toCpp(jniEnv, j_schema),
                     ::djinni_generated::NativeJavascriptPromise::toCpp(jniEnv, j_promise));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_vasern_VasernManager_00024CppProxy_native_1InsertRecords(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_collect, ::djinni_generated::NativeJavascriptArray::JniType j_records, ::djinni_generated::NativeJavascriptPromise::JniType j_promise)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::vasern::VasernManager>(nativeRef);
        ref->InsertRecords(::djinni::String::toCpp(jniEnv, j_collect),
                           ::djinni_generated::NativeJavascriptArray::toCpp(jniEnv, j_records),
                           ::djinni_generated::NativeJavascriptPromise::toCpp(jniEnv, j_promise));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_vasern_VasernManager_00024CppProxy_native_1DeleteRecords(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_collect, ::djinni_generated::NativeJavascriptArray::JniType j_ids, ::djinni_generated::NativeJavascriptPromise::JniType j_promise)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::vasern::VasernManager>(nativeRef);
        ref->DeleteRecords(::djinni::String::toCpp(jniEnv, j_collect),
                           ::djinni_generated::NativeJavascriptArray::toCpp(jniEnv, j_ids),
                           ::djinni_generated::NativeJavascriptPromise::toCpp(jniEnv, j_promise));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_vasern_VasernManager_00024CppProxy_native_1UpdateRecords(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_collect, ::djinni_generated::NativeJavascriptMap::JniType j_records, ::djinni_generated::NativeJavascriptPromise::JniType j_promise)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::vasern::VasernManager>(nativeRef);
        ref->UpdateRecords(::djinni::String::toCpp(jniEnv, j_collect),
                           ::djinni_generated::NativeJavascriptMap::toCpp(jniEnv, j_records),
                           ::djinni_generated::NativeJavascriptPromise::toCpp(jniEnv, j_promise));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_vasern_VasernManager_00024CppProxy_native_1RemoveAllCollections(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeJavascriptPromise::JniType j_promise)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::vasern::VasernManager>(nativeRef);
        ref->RemoveAllCollections(::djinni_generated::NativeJavascriptPromise::toCpp(jniEnv, j_promise));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_vasern_VasernManager_00024CppProxy_native_1RemoveAllRecords(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_collect, ::djinni_generated::NativeJavascriptPromise::JniType j_promise)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::vasern::VasernManager>(nativeRef);
        ref->RemoveAllRecords(::djinni::String::toCpp(jniEnv, j_collect),
                              ::djinni_generated::NativeJavascriptPromise::toCpp(jniEnv, j_promise));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_vasern_VasernManager_00024CppProxy_native_1GetRecordsByQuery(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_collect, ::djinni_generated::NativeJavascriptMap::JniType j_query, ::djinni_generated::NativeJavascriptPromise::JniType j_promise)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::vasern::VasernManager>(nativeRef);
        ref->GetRecordsByQuery(::djinni::String::toCpp(jniEnv, j_collect),
                               ::djinni_generated::NativeJavascriptMap::toCpp(jniEnv, j_query),
                               ::djinni_generated::NativeJavascriptPromise::toCpp(jniEnv, j_promise));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_vasern_VasernManager_00024CppProxy_native_1CountRecordsByQuery(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_collect, ::djinni_generated::NativeJavascriptMap::JniType j_query, ::djinni_generated::NativeJavascriptPromise::JniType j_promise)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::vasern::VasernManager>(nativeRef);
        ref->CountRecordsByQuery(::djinni::String::toCpp(jniEnv, j_collect),
                                 ::djinni_generated::NativeJavascriptMap::toCpp(jniEnv, j_query),
                                 ::djinni_generated::NativeJavascriptPromise::toCpp(jniEnv, j_promise));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_vasern_VasernManager_00024CppProxy_native_1AllRecords(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_collect, ::djinni_generated::NativeJavascriptPromise::JniType j_promise)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::vasern::VasernManager>(nativeRef);
        ref->AllRecords(::djinni::String::toCpp(jniEnv, j_collect),
                        ::djinni_generated::NativeJavascriptPromise::toCpp(jniEnv, j_promise));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
