// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from vasern.djinni

#pragma once

#include "JavascriptArray.hpp"
#include "JavascriptMap.hpp"
#include "JavascriptPromise.hpp"
#include "ReactBridge.hpp"
#include <memory>
#include <string>

namespace vasern {

class VasernManager {
public:
    virtual ~VasernManager() {}

    static std::shared_ptr<VasernManager> create(const std::shared_ptr<::ReactBridge> & bridge);

    virtual void Startup(const std::shared_ptr<::JavascriptMap> & collect, const std::shared_ptr<::JavascriptPromise> & promise) = 0;

    virtual void InsertRecords(const std::string & collect, const std::shared_ptr<::JavascriptArray> & records, const std::shared_ptr<::JavascriptPromise> & promise) = 0;

    virtual void DeleteRecords(const std::string & collect, const std::shared_ptr<::JavascriptArray> & ids, const std::shared_ptr<::JavascriptPromise> & promise) = 0;

    virtual void UpdateRecords(const std::string & collect, const std::shared_ptr<::JavascriptMap> & records, const std::shared_ptr<::JavascriptPromise> & promise) = 0;

    virtual void RemoveAllCollections(const std::shared_ptr<::JavascriptPromise> & promise) = 0;

    virtual void RemoveAllRecords(const std::string & collect, const std::shared_ptr<::JavascriptPromise> & promise) = 0;

    virtual void GetRecordsByQuery(const std::string & collect, const std::shared_ptr<::JavascriptMap> & query, const std::shared_ptr<::JavascriptPromise> & promise) = 0;

    virtual void CountRecordsByQuery(const std::string & collect, const std::shared_ptr<::JavascriptMap> & query, const std::shared_ptr<::JavascriptPromise> & promise) = 0;

    virtual void AllRecords(const std::string & collect, const std::shared_ptr<::JavascriptPromise> & promise) = 0;
};

}  // namespace vasern
